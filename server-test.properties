# Alicebot Program V Configuration
#------------------------------------------------------------
# Alicebot Program V
# Copyright (C) 2002, VIRTUALITAS Inc.
#
# based on Alicebot Program D Configuration
# Copyright (C) 1995-2001, A.L.I.C.E. AI Foundation
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307,
# USA.

# -----------------------------------------------------------------------------
# GENERAL NOTES
# -----------------------------------------------------------------------------

# 1. Configuration options are grouped for easy maintenance.
# 2. Unless otherwise noted, commenting out a property will
#    cause the engine's default value to be used.
# 3. A property may only be defined once.

# -----------------------------------------------------------------------------
# MAIN PROGRAM V CONFIGURATION
# -----------------------------------------------------------------------------

#
# WARNING: Inactive options are not used by ProgramV yet
#          and lead to a fatal error if activated!
#

# Bot configuration startup file (relative to working directory)
programv.startup=conf/startup-test.xml

# Bot configuration run file (relative to working directory)
programv.runfile=data/knowledge-test.data

# Overwrite categories with identical pattern:that:topic (true/false)
programv.merge=true

# Default value for undefined predicates
#	programd.emptydefault=undefined
#	programv.emptydefault=[undefined]	problems with [ ] !!!
#	programv.emptydefault=undefined
##############################################################################################

# The maximum allowable time (in milliseconds) to get a response
#	programd.response-timeout=1000
programv.response-timeout=5000

# Input to match if an infinite loop is found
programv.infinite-loop-input=INFINITE LOOP

# Input to match if a time out occured
programv.timeout-input=RESPONSE TIMEOUT

#	# Allow use of <system> element? (true/false)
#	programd.os-access-allowed=false
#
#	# Allow use of <javascript> element? (true/false)
#	programd.javascript-allowed=false

#	# Allow use of <perl> element? (true/false)
#	programv.perl-allowed=true

# The string to send when first connecting to the bot
programv.connect-string=CONNECT

#	# The string to send after an inactivity timeout
#	programd.inactivity-string=INACTIVITY
#
#	# Require namespace qualification of non-AIML elements? (true/false)
#	programd.non-aiml-require-namespace-qualifiers=false
#
#	# Support deprecated "AIML 0.9" tags? (true/false)
#	programd.deprecated-tags-support=true
#
#	# Warn about deprecated "AIML 0.9" tags? (true/false)
#	programd.deprecated-tags-warn=true
#
#	# Multiplexor to use
#	#programd.multiplexor=org.alicebot.server.core.DBMultiplexor
#	programd.multiplexor=org.alicebot.server.core.FlatFileMultiplexor
#
#
#	# Enable the heart?
#	# * The heart can beat and let you know the bot is alive.
#	# * Right now the only kind of pulse is a message "I'm alive!" printed to the console.
#	programd.heart.enabled=false
#
#	# Pulse rate for the heart (beats per minute)
#	programd.heart.pulserate=5
#
#	# Enable the heart?
#	# * The heart can beat and let you know the bot is alive.
#	# * Right now the only kind of pulse is a message "I am alive!" printed to the console.
#	#
#	programv.heart.enabled=true
#
#	# Pulse rate for the heart (beats per minute)
#	programv.heart.pulserate=60
#
#	# Message from the heart
#	programv.heart.message=Hallo Teilnehmer?
#
#
#
#	# Maximum size of the cache before writing to disk/database.
#	programd.predicate-cache.max=500
#
#	# command line to launch preferred browser (for testing)
#	# * leaving this value blank or commented out disables the feature
#	#programd.browser-launch=/usr/bin/mozilla
#	#programd.browser-launch=C:\\Program Files\\Opera\\opera.exe
#	#programd.browser-launch=C:\\Program Files\\Netscape\\Netscape 6\\netscp6.exe
#	#programd.browser-launch=C:\\Program Files\\Internet Explorer\\iexplore.exe
#
#
#	# -----------------------------------------------------------------------------
#	# CONSOLE/TRACE CONFIGURATION
#	# -----------------------------------------------------------------------------
#
#	# Show information on console (true/false)
#	programd.console=true
#
#	# Show developer info messages on console (true/false)
#	programd.console.developer=false
#
#	# Developer: show caller methods even for userinfo messages (true/false)
#	# * This is an advanced debugging feature.  You likely want to
#	# * leave it set to false.
#	programd.console.developer.method-names-always=false
#
#	# Show match-trace messages on console (true/false)
#	programd.console.match-trace=false
#
#	# Show message type flags on console (true/false)
#	programd.console.message-flags=false
#
#	# Which bot predicate contains the bot's name
#	programd.console.bot-name-predicate=name
#
#	# Which bot predicate contains the client's name
#	programd.console.client-name-predicate=name
#
#	# Warn about non-AIML elements when loading AIML (true/false)
#	programd.console.warn-non-aiml=true
#
#	# How many categories will be loaded before a message is displayed
#	# * Only meaningful if programd.console=true
#	programd.console.category-load-notify-interval=6000
#
#	# The date-time format to use on the console
#	# * See http://java.sun.com/j2se/1.4/docs/api/java/text/SimpleDateFormat.html
#	#   for formatting codes.
#	# * Setting the value to blank means no timestamp will be displayed.
#	programd.console.timestamp-format=H:mm:ss
#
#	# Use interactive command-line shell (true/false)
#	programd.shell=true
#
#	# -----------------------------------------------------------------------------
#	# INTERPRETER CONFIGURATION
#	# -----------------------------------------------------------------------------
#
#	# Directory in which to execute <system> commands
#	programd.interpreter.system.directory=./
#
#	# String to prepend to all <system> calls (platform-specific)
#	# * Windows requires something like "cmd /c"; *nix doesn't (just comment out)
#	programd.interpreter.system.prefix=cmd /c
#
#	# JavaScript interpreter (fully-qualified class name)
#	programd.interpreter.javascript=org.alicebot.server.core.interpreter.RhinoInterpreter
#
#
#	# -----------------------------------------------------------------------------
#	# HTTP SERVER CONFIGURATION
#	# -----------------------------------------------------------------------------
#
#	# HTTP server (wrapper) to use (fully-qualified class name)
#	programd.httpserver.classname=org.alicebot.server.net.JettyWrapper
#
#	# configuration parameter for the HTTP server (not always applicable)
#	programd.httpserver.config=./conf/jetty.xml
#
#	# Whether to enable authentication via the http server (true/false)
#	programd.httpserver.authenticate=true
#
#	# Whether to automatically generate a cookie for an unknown user (true/false)
#	# * Only applicable if programd.httpserver.authenticate=true
#	programd.httpserver.autocookie=true
#
#	# -----------------------------------------------------------------------------
#	# RESPONDER CONFIGURATION
#	# -----------------------------------------------------------------------------
#
#	# -----------------------------------------------------------------------------
#	# HTML Responder configuration
#	# -----------------------------------------------------------------------------
#
#	# The html templates directory (relative to programd.home).
#	programd.responder.html.template.directory=templates/html
#
#	# The default chat template.
#	# * Note: Any other *.html, *.htm or *.data files in
#	#	  programd.responder.flash.template.directory will also be available if
#	#         you specify a template=name (without suffixes) parameter in the user request.
#	programd.responder.html.template.chat-default=chat.html
#
#	# The registration template.
#	programd.responder.html.template.register=register.html
#
#	# The login template.
#	programd.responder.html.template.login=login.html
#
#	# The change password template.
#	programd.responder.html.template.change-password=change-password.html
#
#	# -----------------------------------------------------------------------------
#	# Flash Responder configuration
#	# -----------------------------------------------------------------------------
#
#	# The flash templates directory (relative to programd.home).
#	programd.responder.flash.template.directory=templates/flash
#
#	# The default chat template.
#	# * Note: Any other *.flash or *.data files in
#	#	  programd.responder.flash.template.directory will also be available if
#	#         you specify a template=name (without suffixes) parameter in the user request.
#	programd.responder.flash.template.chat-default=chat.flash
#
#	# The registration template.
#	programd.responder.flash.template.register=register.flash
#
#	# The login template.
#	programd.responder.flash.template.login=login.flash
#
#	# The change password template.
#	programd.responder.flash.template.change-password=change-password.flash
#
#	# -----------------------------------------------------------------------------
#	# AIMLWATCHER CONFIGURATION
#	# -----------------------------------------------------------------------------
#
#	# Enable AIML Watcher (true/false)
#	programd.watcher=false
#
#	# Delay period when checking changed AIML (milliseconds)
#	# * Only applicable if programd.watcher=true
#	programd.watcher.timer=2000
#
#	# -----------------------------------------------------------------------------
#	# LOGGING CONFIGURATION
#	# * Not defining a value means that the logging type will be disabled.
#	# * Note that you can send different log events to the same file if desired.
#	# -----------------------------------------------------------------------------
#
#	# -----------------------------------------------------------------------------
#	# Standard (text file) logs
#	# -----------------------------------------------------------------------------
#
#	programd.logging.listeners.path=./logs/listeners.log
#	programd.logging.access.path=./logs/access.log
#	programd.logging.database.path=./logs/database.log
#	programd.logging.debug.path=./logs/debug.log
#	programd.logging.error.path=./logs/error.log
#	programd.logging.event.path=./logs/event.log
#	programd.logging.gossip.path=./logs/gossip.log
#	programd.logging.interpreter.path=./logs/interpreter.log
#	programd.logging.learn.path=./logs/learn.log
#	programd.logging.merge.path=./logs/merge.log
#	programd.logging.startup.path=./logs/startup.log
#	programd.logging.servlet.path=./logs/servlet.log
#	programd.logging.system.path=./logs/system.log
#	programd.logging.targeting.path=./logs/targeting.log
#
#	# The date-time format to use in logging
#	# * See http://java.sun.com/j2se/1.3/docs/api/java/text/SimpleDateFormat.html
#	#   for formatting codes.
#	# * Setting the value to blank means no timestamp will be displayed.
#	programd.logging.timestamp-format=yyyy-MM-dd H:mm:ss
#
#	# The generic userid to use in logs when old responders don't have it
#	programd.logging.generic-username=client
#
#	# -----------------------------------------------------------------------------
#	# XML logs
#	# -----------------------------------------------------------------------------
#
#	# Enable chat logging to xml text files?
#	# * Be sure that the database configuration (later in this file) is valid.
#	programd.logging.to-xml.chat=true
#
#	# How many log entries to collect before "rolling over" an XML log file.
#	# * "Rolling over" means that the current file is renamed using the date & time,
#	# * and a fresh log file is created using the path name.  The new log file will
#	# * contain links to all of the previous log files of the same type.
#	programd.logging.xml.rollover=500
#
#	# Directory for XML chat logs
#	programd.logging.xml.chat.log-directory=./logs/chat
#
#	# Path to stylesheet for viewing chat logs
#	programd.logging.xml.chat.stylesheet-path=../../../resources/logs/view-chat.xsl
#
#	# Whether to roll over the chat log at restart
#	programd.logging.xml.chat.rollover-at-restart=false
#
#	# -----------------------------------------------------------------------------
#	# Database logs
#	# -----------------------------------------------------------------------------
#
#	# Enable chat logging to the database?
#	# * Be sure that the database configuration (later in this file) is valid.
#	programd.logging.to-database.chat=false
#
#	# -----------------------------------------------------------------------------
#	# TARGETING CONFIGURATION
#	# -----------------------------------------------------------------------------
#
#	# Whether to enable targeting
#	programd.targeting=false
#
#	# Where targeting data should be stored
#	programd.targeting.data.path=./targets/targets.xml
#
#	# Location of targeting aiml file
#	programd.targeting.aiml.path=./targets/targets.aiml
#
#	# Number of responses to wait before invoking targeting
#	programd.targeting.targetskip=0
#
#	# Preferred encoding for writing targeting data XML files (default: UTF-8)
#	#programd.targeting.data.encoding=ISO-8859-5
#
#	# -----------------------------------------------------------------------------
#	# DATABASE CONFIGURATION
#	# * This is only meaningful if you are using a database-enabled Multiplexor
#	# * and/or the database-based chat logging.
#	# -----------------------------------------------------------------------------
#
#	# Typical mySQL configuration
#	programd.database.url=jdbc:mysql:///alicebot
#	programd.database.driver=org.gjt.mm.mysql.Driver
#
#	# The maximum number of simultaneous connections to the database
#	programd.database.connections=25
#
#	# The username to access the database
#	programd.database.user=alicebot
#
#	# The password for the database
#	programd.database.password=yourpassword
